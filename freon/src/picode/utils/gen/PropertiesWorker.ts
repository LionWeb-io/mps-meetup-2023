// Generated by the Freon Language Generator.
import { BooleanValue, DecValue, IntValue, Properties, PropertiesFile, Property, StringValue, Value } from "../../language/gen";

/**
 * Interface PropertiesWorker implements the extended visitor pattern of instances of language Properties.
 * Class PropertiesWalker implements the traversal of the model tree, classes that implement this interface
 * are responsible for the actual work being done on the nodes of the tree.
 * Every node is visited twice, once before the visit of its children, and once after this visit.
 */
export interface PropertiesWorker {
    execBeforeProperties(modelelement: Properties): boolean;
    execAfterProperties(modelelement: Properties): boolean;

    execBeforePropertiesFile(modelelement: PropertiesFile): boolean;
    execAfterPropertiesFile(modelelement: PropertiesFile): boolean;

    execBeforeProperty(modelelement: Property): boolean;
    execAfterProperty(modelelement: Property): boolean;

    execBeforeValue(modelelement: Value): boolean;
    execAfterValue(modelelement: Value): boolean;

    execBeforeBooleanValue(modelelement: BooleanValue): boolean;
    execAfterBooleanValue(modelelement: BooleanValue): boolean;

    execBeforeDecValue(modelelement: DecValue): boolean;
    execAfterDecValue(modelelement: DecValue): boolean;

    execBeforeIntValue(modelelement: IntValue): boolean;
    execAfterIntValue(modelelement: IntValue): boolean;

    execBeforeStringValue(modelelement: StringValue): boolean;
    execAfterStringValue(modelelement: StringValue): boolean;
}
